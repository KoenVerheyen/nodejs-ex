// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DevLoginPageContainer store to component mapping with user 1`] = `
<DevLoginPageComponent
  identities={
    Array [
      Object {
        "function": Object {
          "id": 1,
          "name": "functionLF",
        },
        "person": Object {
          "firstName": "John",
          "id": 1,
          "lastName": "Doe",
        },
        "profile": Object {
          "id": 1,
          "name": "local rad coordinator",
        },
      },
      Object {
        "function": Object {
          "id": 2,
          "name": "functionEB",
        },
        "person": Object {
          "firstName": "John",
          "id": 1,
          "lastName": "Doe",
        },
        "profile": Object {
          "id": 1,
          "name": "local rad coordinator",
        },
      },
    ]
  }
  loading={true}
  onSelectToken={[Function]}
  postSelectIdentity={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
  token="lrc"
/>
`;

exports[`DevLoginPageContainer store to component mapping without user 1`] = `
<DevLoginPageComponent
  identities={Array []}
  loading={false}
  onSelectToken={[Function]}
  postSelectIdentity={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
  token="lrc"
/>
`;
